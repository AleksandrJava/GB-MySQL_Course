SELECT `_cities`.`id`,
`_cities`.`title`, 
`_countries`.`title` AS `country`,
`_regions`.`title` AS `region`
FROM `_cities` INNER JOIN (`_countries`, `_regions`)
ON (`_cities`.`country_id` = `_countries`.id AND `_cities`.`region_id` = `_regions`.`id`)
WHERE `_cities`.`id` = 2;


SELECT `_cities`.`title` FROM `_cities` 
INNER JOIN (`_regions`) 
ON (`_cities`.`region_id` = `_regions`.`id`)
WHERE `_regions`.`title` REGEXP '^Московская$';


_________________________________________________________________________________________

CREATE DATABASE IF NOT EXISTS `lesson3` 
DEFAULT CHAR SET utf8mb4 COLLATE utf8mb4_unicode_ci;

USE `lesson3`;

CREATE TABLE IF NOT EXISTS `depart` (
`id` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
`name` VARCHAR(40) NOT NULL,
`count` INT DEFAULT 0,
`head_id` INT
);

CREATE TABLE IF NOT EXISTS `shtat` (
`id` INT NOT NULL AUTO_INCREMENT,
`name` VARCHAR(25) NOT NULL,
`lastname` VARCHAR(30) NOT NULL,
`depart` INT,
`position` VARCHAR(40),
`salary` INT NOT NULL,
PRIMARY KEY (`id`)
)DEFAULT CHAR SET utf8mb4 COLLATE utf8mb4_unicode_ci;


INSERT INTO `depart` 
(`name`) VALUES 
('Бухгалтерия'),
('Охрана'),
('Реклама'),
('Отдел кадров'),
('Столовая'),
('Юристы');

INSERT INTO `shtat` 
(`name`,`lastname`,`depart`,`salary`) VALUES 
('Сергей','Григорьев',3,25000),
('Алена','Митрохина',1,35000),
('Георгий','Мухин',2,45000),
('Артур','Поляков',6,55000),
('Артём','Веснушкин',6,50000);

INSERT INTO `shtat` 
(`name`,`lastname`,`depart`,`salary`,`position`) VALUES 
('Анатолий','Башлыков',1,30000,'Бухгалтер'),
('Евгений','Полянский',4,50000,'Кадровик');

ALTER TABLE `shtat` 
ADD CONSTRAINT `dept_sotr` FOREIGN KEY (`depart`)
REFERENCES `depart`(`id`)
ON UPDATE CASCADE
ON DELETE RESTRICT;

#1. Выбрать среднюю зарплату по отделам.
SELECT `depart`.`name`, AVG(`salary`) AS `average` FROM `shtat` 
INNER JOIN `depart` 
ON `depart`.`id` = `shtat`.`depart`
GROUP BY `depart`.`name`

#2. Выбрать максимальную зарплату у сотрудника.
SELECT CONCAT(`name`, ' ', `lastname`) AS `full_name`, MAX(`salary`) AS `max_salary` FROM `shtat`
GROUP BY `full_name`
ORDER BY `max_salary` DESC
LIMIT 1;

#3. Удалить одного сотрудника, у которого максимальная зарплата.
SET sql_safe_updates=0;
DELETE FROM `shtat`
WHERE `salary` = 
(SELECT * FROM (SELECT MAX(`salary`) FROM `shtat`) AS `table`);
SET sql_safe_updates=1;

#4. Посчитать количество сотрудников во всех отделах.
SELECT `depart`.`name` AS `title`, SUM(`depart`/`depart`) AS `count` FROM `shtat`
INNER JOIN(`depart`)
ON(`depart`.`id` = `shtat`.`depart`)
GROUP BY `title`;

#5. Найти количество сотрудников в отделах и посмотреть, сколько всего денег получает отдел.
SELECT `depart`.`name` AS `title`, SUM(`depart`/`depart`) AS `count`, SUM(`salary`) AS `all_salary` FROM `shtat`
INNER JOIN(`depart`)
ON(`depart`.`id` = `shtat`.`depart`)
GROUP BY `title`
ORDER BY `all_salary`;
